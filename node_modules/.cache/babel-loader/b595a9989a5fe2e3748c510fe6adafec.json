{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_POST_REQUEST, FETCH_POST_SUCCESS, FETCH_POST_ERROR } from \"../actions/type\";\nexport const loadPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: FETCH_POST_REQUEST\n    });\n    const res = await axios.get(`https://dev.api.codekitten.vn/api/v1/project/search?name=%20&page=${page}`);\n    const responseBody = res.data.data.data;\n    const total_records = res.data.data.total_records;\n    const total_page = res.data.data.total_page;\n    const currentPage = res.data.data.current_page;\n    console.log(responseBody);\n    console.log(res.data.data);\n    console.log(total_records);\n    console.log(curr);\n    dispatch({\n      type: FETCH_POST_SUCCESS,\n      data: responseBody,\n      total_page: total_page,\n      total_records: total_records\n    });\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: FETCH_POST_ERROR,\n      message: error\n    });\n  }\n};","map":{"version":3,"names":["axios","FETCH_POST_REQUEST","FETCH_POST_SUCCESS","FETCH_POST_ERROR","loadPosts","page","dispatch","type","res","get","responseBody","data","total_records","total_page","currentPage","current_page","console","log","curr","error","message"],"sources":["C:/Users/DELL/Desktop/CodeKitten/project-all/src/redux/actions/postAction.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  FETCH_POST_REQUEST,\r\n  FETCH_POST_SUCCESS,\r\n  FETCH_POST_ERROR,\r\n} from \"../actions/type\";\r\n\r\nexport const loadPosts = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FETCH_POST_REQUEST });\r\n\r\n    const res = await axios.get(\r\n      `https://dev.api.codekitten.vn/api/v1/project/search?name=%20&page=${page}`\r\n    );\r\n    const responseBody = res.data.data.data;\r\n    const total_records = res.data.data.total_records;\r\n    const total_page = res.data.data.total_page;\r\n    const currentPage = res.data.data.current_page;\r\n    console.log(responseBody);\r\n    console.log(res.data.data);\r\n    console.log(total_records);\r\n    console.log(curr);\r\n    dispatch({\r\n      type: FETCH_POST_SUCCESS,\r\n      data: responseBody,\r\n      total_page: total_page,\r\n      total_records: total_records,\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch({\r\n      type: FETCH_POST_ERROR,\r\n      message: error,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,gBAHF,QAIO,iBAJP;AAMA,OAAO,MAAMC,SAAS,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;EACrD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAR,CAAD,CAAR;IAEA,MAAMO,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CACf,qEAAoEJ,IAAK,EAD1D,CAAlB;IAGA,MAAMK,YAAY,GAAGF,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcA,IAAnC;IACA,MAAMC,aAAa,GAAGJ,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,aAApC;IACA,MAAMC,UAAU,GAAGL,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcE,UAAjC;IACA,MAAMC,WAAW,GAAGN,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcI,YAAlC;IACAC,OAAO,CAACC,GAAR,CAAYP,YAAZ;IACAM,OAAO,CAACC,GAAR,CAAYT,GAAG,CAACG,IAAJ,CAASA,IAArB;IACAK,OAAO,CAACC,GAAR,CAAYL,aAAZ;IACAI,OAAO,CAACC,GAAR,CAAYC,IAAZ;IACAZ,QAAQ,CAAC;MACPC,IAAI,EAAEL,kBADC;MAEPS,IAAI,EAAED,YAFC;MAGPG,UAAU,EAAEA,UAHL;MAIPD,aAAa,EAAEA;IAJR,CAAD,CAAR;EAMD,CApBD,CAoBE,OAAOO,KAAP,EAAc;IACdH,OAAO,CAACG,KAAR,CAAcA,KAAd;IACAb,QAAQ,CAAC;MACPC,IAAI,EAAEJ,gBADC;MAEPiB,OAAO,EAAED;IAFF,CAAD,CAAR;EAID;AACF,CA5BM"},"metadata":{},"sourceType":"module"}