{"ast":null,"code":"// import React, { Component, Fragment } from \"react\";\n// import PropTypes from \"prop-types\";\n// class Pagination extends Component {\n//   // ...  const LEFT_PAGE = 'LEFT'; const RIGHT_PAGE = 'RIGHT';  /**  * Helper method for creating a range of numbers  * range(1, 5) => [1, 2, 3, 4, 5]  */ \n//   const range = (from, to, step = 1) => {   let i = from;   const range = [];    while (i <= to) {     range.push(i);     i += step;   }    return range; } \n//   constructor(props) {\n//     super(props);\n//     const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\n//     this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\n//     this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\n//     // pageNeighbours can be: 0, 1 or 2\n//     this.pageNeighbours =\n//       typeof pageNeighbours === \"number\"\n//         ? Math.max(0, Math.min(pageNeighbours, 2))\n//         : 0;\n//     this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n//     this.state = { currentPage: 1 };\n//   }\n// }\n// Pagination.propTypes = {\n//   totalRecords: PropTypes.number.isRequired,\n//   pageLimit: PropTypes.number,\n//   pageNeighbours: PropTypes.number,\n//   onPageChanged: PropTypes.func,\n// };\n// export default Pagination;","map":{"version":3,"names":[],"sources":["C:/Users/DELL/Desktop/CodeKitten/project-all/src/components/page-item.jsx"],"sourcesContent":["// import React, { Component, Fragment } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// class Pagination extends Component {\r\n//   // ...  const LEFT_PAGE = 'LEFT'; const RIGHT_PAGE = 'RIGHT';  /**  * Helper method for creating a range of numbers  * range(1, 5) => [1, 2, 3, 4, 5]  */ \r\n//   const range = (from, to, step = 1) => {   let i = from;   const range = [];    while (i <= to) {     range.push(i);     i += step;   }    return range; } \r\n\r\n//   constructor(props) {\r\n//     super(props);\r\n//     const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n//     this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n//     this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n//     // pageNeighbours can be: 0, 1 or 2\r\n//     this.pageNeighbours =\r\n//       typeof pageNeighbours === \"number\"\r\n//         ? Math.max(0, Math.min(pageNeighbours, 2))\r\n//         : 0;\r\n//     this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n//     this.state = { currentPage: 1 };\r\n//   }\r\n// }\r\n// Pagination.propTypes = {\r\n//   totalRecords: PropTypes.number.isRequired,\r\n//   pageLimit: PropTypes.number,\r\n//   pageNeighbours: PropTypes.number,\r\n//   onPageChanged: PropTypes.func,\r\n// };\r\n// export default Pagination;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}