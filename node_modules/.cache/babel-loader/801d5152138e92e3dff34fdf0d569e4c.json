{"ast":null,"code":"import axios from \"axios\";\nimport { FETCH_POST_REQUEST, FETCH_POST_SUCCESS, FETCH_POST_ERROR } from \"../actions/type\";\nexport const loadPosts = (page, name, filter) => async dispatch => {\n  try {\n    dispatch({\n      type: FETCH_POST_REQUEST\n    });\n    setTimeout(async () => {\n      const res = await axios.get(`https://dev.api.codekitten.vn/api/v1/project/search?name=${name}&page=${page}&filter=${filter}`);\n      const responseBody = res.data.data.data;\n      const total_records = res.data.data.total_records;\n      const total_page = res.data.data.total_page;\n      const current_page = res.data.data.current_page;\n      dispatch({\n        type: FETCH_POST_SUCCESS,\n        data: responseBody,\n        total_page: total_page,\n        total_records: total_records,\n        current_page: current_page,\n        nameSearch: name,\n        filter: filter\n      });\n    }, 3000);\n  } catch (error) {\n    console.error(error);\n    dispatch({\n      type: FETCH_POST_ERROR,\n      message: error\n    });\n  }\n};","map":{"version":3,"names":["axios","FETCH_POST_REQUEST","FETCH_POST_SUCCESS","FETCH_POST_ERROR","loadPosts","page","name","filter","dispatch","type","setTimeout","res","get","responseBody","data","total_records","total_page","current_page","nameSearch","error","console","message"],"sources":["C:/Users/DELL/Desktop/CodeKitten/project-all/src/redux/actions/postAction.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  FETCH_POST_REQUEST,\r\n  FETCH_POST_SUCCESS,\r\n  FETCH_POST_ERROR,\r\n} from \"../actions/type\";\r\n\r\nexport const loadPosts = (page, name, filter) => async (dispatch) => {\r\n  \r\n  try {\r\n    dispatch({ type: FETCH_POST_REQUEST });\r\n    setTimeout(async ()=>{\r\n      const res = await axios.get(\r\n        `https://dev.api.codekitten.vn/api/v1/project/search?name=${name}&page=${page}&filter=${filter}`\r\n      );\r\n      const responseBody = res.data.data.data;\r\n      const total_records = res.data.data.total_records;\r\n      const total_page = res.data.data.total_page;\r\n      const current_page = res.data.data.current_page;\r\n      dispatch({\r\n        type: FETCH_POST_SUCCESS,\r\n        data: responseBody,\r\n        total_page: total_page,\r\n        total_records: total_records,\r\n        current_page: current_page,\r\n        nameSearch: name,\r\n        filter: filter,\r\n      });\r\n    },3000)\r\n   \r\n  } catch (error) {\r\n    console.error(error);\r\n    dispatch({\r\n      type: FETCH_POST_ERROR,\r\n      message: error,\r\n    });\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,gBAHF,QAIO,iBAJP;AAMA,OAAO,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,MAAb,KAAwB,MAAOC,QAAP,IAAoB;EAEnE,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAR,CAAD,CAAR;IACAS,UAAU,CAAC,YAAU;MACnB,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CACf,4DAA2DN,IAAK,SAAQD,IAAK,WAAUE,MAAO,EAD/E,CAAlB;MAGA,MAAMM,YAAY,GAAGF,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcA,IAAnC;MACA,MAAMC,aAAa,GAAGJ,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcC,aAApC;MACA,MAAMC,UAAU,GAAGL,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcE,UAAjC;MACA,MAAMC,YAAY,GAAGN,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcG,YAAnC;MACAT,QAAQ,CAAC;QACPC,IAAI,EAAEP,kBADC;QAEPY,IAAI,EAAED,YAFC;QAGPG,UAAU,EAAEA,UAHL;QAIPD,aAAa,EAAEA,aAJR;QAKPE,YAAY,EAAEA,YALP;QAMPC,UAAU,EAAEZ,IANL;QAOPC,MAAM,EAAEA;MAPD,CAAD,CAAR;IASD,CAjBS,EAiBR,IAjBQ,CAAV;EAmBD,CArBD,CAqBE,OAAOY,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACAX,QAAQ,CAAC;MACPC,IAAI,EAAEN,gBADC;MAEPkB,OAAO,EAAEF;IAFF,CAAD,CAAR;EAID;AACF,CA9BM"},"metadata":{},"sourceType":"module"}