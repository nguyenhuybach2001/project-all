{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\CodeKitten\\\\project-all\\\\src\\\\components\\\\page-item.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import Posts from \"../components/posts\";\n// import Pagination from \"../components/pagination\";\n// import axios from \"axios\";\n// import \"../App.css\";\n// export default function PageItem() {\n//   const [loading, setLoading] = useState(false);\n//   const [posts, setPosts] = useState([]);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [postsPerPage] = useState(10);\n//   useEffect(() => {\n//     const fetchPosts = async () => {\n//       setLoading(true);\n//       const res = await axios.get('https://dev.api.codekitten.vn/api/v1/project/search');\n//       setPosts(res.data.data.data);\n//       setLoading(false);\n//     };\n//     fetchPosts();\n//   }, []);\n//   const indexOfLastPost = currentPage * postsPerPage;\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber);\n//   return (\n//     <div>\n//       <Pagination\n//         postsPerPage={postsPerPage}\n//         totalPosts={posts.length}\n//         paginate={paginate}\n//       />\n//     </div>\n//   );\n// }\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PageItem(props) {\n  _s();\n\n  const {\n    data\n  } = props;\n  const [currentItems, setCurrentItems] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  const [itemOffset, setItemOffset] = useState(0);\n  useEffect(() => {\n    const endOffset = itemOffset + itemsPerPage;\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\n    setCurrentItems(items.slice(itemOffset, endOffset));\n    setPageCount(Math.ceil(items.length / itemsPerPage));\n  }, [itemOffset, itemsPerPage]); // Invoke when user click to request another page.\n\n  const handlePageClick = event => {\n    const newOffset = event.selected * itemsPerPage % items.length;\n    console.log(`User requested page number ${event.selected}, which is offset ${newOffset}`);\n    setItemOffset(newOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Items, {\n      currentItems: currentItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"next >\",\n      onPageChange: handlePageClick,\n      pageRangeDisplayed: 5,\n      pageCount: pageCount,\n      previousLabel: \"< previous\",\n      renderOnZeroPageCount: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PageItem, \"HTeX8cSP+G2jiDQZoJcFFLxPhRM=\");\n\n_c = PageItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageItem\");","map":{"version":3,"names":["useEffect","useState","PageItem","props","data","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","itemsPerPage","console","log","items","slice","Math","ceil","length","handlePageClick","event","newOffset","selected"],"sources":["C:/Users/DELL/Desktop/CodeKitten/project-all/src/components/page-item.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import Posts from \"../components/posts\";\r\n// import Pagination from \"../components/pagination\";\r\n// import axios from \"axios\";\r\n// import \"../App.css\";\r\n\r\n// export default function PageItem() {\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const [posts, setPosts] = useState([]);\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const [postsPerPage] = useState(10);\r\n//   useEffect(() => {\r\n//     const fetchPosts = async () => {\r\n//       setLoading(true);\r\n//       const res = await axios.get('https://dev.api.codekitten.vn/api/v1/project/search');\r\n//       setPosts(res.data.data.data);\r\n//       setLoading(false);\r\n//     };\r\n\r\n//     fetchPosts();\r\n//   }, []);\r\n//   const indexOfLastPost = currentPage * postsPerPage;\r\n//   const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n//   return (\r\n//     <div>\r\n//       <Pagination\r\n//         postsPerPage={postsPerPage}\r\n//         totalPosts={posts.length}\r\n//         paginate={paginate}\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport { useEffect, useState } from \"react\";\r\nexport default function PageItem(props){\r\n  const {data} = props;\r\n  const [currentItems, setCurrentItems] = useState(null);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const endOffset = itemOffset + itemsPerPage;\r\n    console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n    setCurrentItems(items.slice(itemOffset, endOffset));\r\n    setPageCount(Math.ceil(items.length / itemsPerPage));\r\n  }, [itemOffset, itemsPerPage]);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % items.length;\r\n    console.log(\r\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Items currentItems={currentItems} />\r\n      <ReactPaginate\r\n        breakLabel=\"...\"\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={pageCount}\r\n        previousLabel=\"< previous\"\r\n        renderOnZeroPageCount={null}\r\n      />\r\n    </>\r\n  );\r\n}"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;EAAA;;EACrC,MAAM;IAACC;EAAD,IAASD,KAAf;EACA,MAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,IAAD,CAAhD;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,CAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAGF,UAAU,GAAGG,YAA/B;IACAC,OAAO,CAACC,GAAR,CAAa,sBAAqBL,UAAW,OAAME,SAAU,EAA7D;IACAL,eAAe,CAACS,KAAK,CAACC,KAAN,CAAYP,UAAZ,EAAwBE,SAAxB,CAAD,CAAf;IACAH,YAAY,CAACS,IAAI,CAACC,IAAL,CAAUH,KAAK,CAACI,MAAN,GAAeP,YAAzB,CAAD,CAAZ;EACD,CALQ,EAKN,CAACH,UAAD,EAAaG,YAAb,CALM,CAAT,CANqC,CAarC;;EACA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;IACjC,MAAMC,SAAS,GAAID,KAAK,CAACE,QAAN,GAAiBX,YAAlB,GAAkCG,KAAK,CAACI,MAA1D;IACAN,OAAO,CAACC,GAAR,CACG,8BAA6BO,KAAK,CAACE,QAAS,qBAAoBD,SAAU,EAD7E;IAGAZ,aAAa,CAACY,SAAD,CAAb;EACD,CAND;;EAQA,oBACE;IAAA,wBACE,QAAC,KAAD;MAAO,YAAY,EAAEjB;IAArB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,aAAD;MACE,UAAU,EAAC,KADb;MAEE,SAAS,EAAC,QAFZ;MAGE,YAAY,EAAEe,eAHhB;MAIE,kBAAkB,EAAE,CAJtB;MAKE,SAAS,EAAEb,SALb;MAME,aAAa,EAAC,YANhB;MAOE,qBAAqB,EAAE;IAPzB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAcD;;GApCuBL,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}